import os
from linebot import LineBotApi, WebhookHandler
from linebot.models import MessageEvent, TextMessage, TextSendMessage
from fetch_earthquake import fetch_earthquake_data
from config import settings
from db_connect import is_subscribed_pg, new_user_pg, terminate_user_pg, check_db_connection

line_bot_api = LineBotApi(settings.LINE_CHANNEL_ACCESS_TOKEN)
handler = WebhookHandler(settings.LINE_CHANNEL_SECRET)

def is_subscribed(user_id: str, filename="subscribers.txt") -> bool:
    try:
        with open(filename, "r") as f:
            for line in f:
                if line.strip() == user_id:
                    return True
        return False
    except FileNotFoundError:
        return False

def get_subscribers():
    try:
        with open("subscribers.txt", "r") as f:
            return list(set(line.strip() for line in f))
    except FileNotFoundError:
        return []

def push_earthquake_alert():
    message = fetch_earthquake_data()  # ‡∏´‡∏£‡∏∑‡∏≠ fetch ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ event ‡πÉ‡∏´‡∏°‡πà
    if not message:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß‡πÉ‡∏´‡∏°‡πà")
        return

    for user_id in get_subscribers():
        try:
            line_bot_api.push_message(user_id, TextSendMessage(text=message))
            print("‚úÖ ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ:", user_id)
        except Exception as e:
            print("‚ùå ‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", e)

#if __name__ == "__main__":
#    push_earthquake_alert()

def handle_line_webhook(body, signature):
    from fastapi.responses import Response
    try:
        handler.handle(body.decode(), signature)
        print("‚úÖ Handler ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö event ‡πÅ‡∏•‡πâ‡∏ß")
    except Exception as e:
        print("‚ùå ERROR ‡πÉ‡∏ô handler.handle() line_bot :", e)
    return Response(content="OK", status_code=200)

@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    user_id = event.source.user_id
    text = event.message.text.strip()
    
    if text == "‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î":
        info = fetch_earthquake_data()
        print("üîé DEBUG info = ", repr(info))  # ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å

        if info and info.strip():
            line_bot_api.reply_message(
                event.reply_token,
                TextSendMessage(text=info)
            )
        else:
            line_bot_api.reply_message(
                event.reply_token,
                TextSendMessage(text="‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß‡πÉ‡∏ô‡∏ó‡∏ß‡∏µ‡∏õ‡πÄ‡∏≠‡πÄ‡∏ä‡∏µ‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏£‡∏á‡πÄ‡∏Å‡∏¥‡∏ô 1.0 ‡∏Ñ‡πà‡∏∞")
            )

    elif text == "‡∏™‡∏°‡∏±‡∏Ñ‡∏£":
        if is_subscribed_pg(user_id):
            reply = "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ñ‡∏¢‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß‡πÅ‡∏•‡πâ‡∏ß"
        else:
            new_user_pg(user_id)
            reply = "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!"
        line_bot_api.reply_message(
            event.reply_token,
            TextSendMessage(text=reply)
        )
    elif text == "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å":
        if is_subscribed_pg(user_id):
            terminate_user_pg(user_id)
            reply = "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!"
        else:
            reply = "‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£ ‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß"
        line_bot_api.reply_message(
            event.reply_token,
            TextSendMessage(text=reply)
        )
    elif text == "‡∏£‡∏≥‡∏Ñ‡∏≤‡∏ô" or text == "‡∏£‡∏≥‡∏Ñ‡∏≤‡∏ç":
        line_bot_api.reply_message(
                event.reply_token,
                TextSendMessage(text="‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡∏î‡∏¥‡∏â‡∏±‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÅ‡∏Ñ‡πà‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
            )
